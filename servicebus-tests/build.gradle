plugins {
    id "groovy"
    id "maven-publish"
    id "io.micronaut.minimal.library"
    id "java-test-fixtures"
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

micronaut {
    version "$micronautVersion"
    runtime("netty")
    processing {
        annotations "dmcs.*"
        incremental(true)
    }
}

dependencies {

    testFixturesApi(platform(project(':platform')))

    annotationProcessor "io.micronaut:micronaut-inject-groovy"
    testAnnotationProcessor "io.micronaut:micronaut-inject-groovy"

    implementation "org.apache.groovy:groovy-all:$groovyVersion"
    testImplementation "org.apache.groovy:groovy-all:$groovyVersion"

    testFixturesApi "io.micronaut.test:micronaut-test-spock"
    testFixturesApi "io.micronaut:micronaut-http-server-netty"
    testFixturesApi "io.micronaut:micronaut-http-client"
    testFixturesApi "io.micronaut:micronaut-inject-groovy"
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor:$micronautVersion")
    testFixturesApi("io.micronaut.serde:micronaut-serde-jackson:2.1.0")

    testFixturesApi 'org.junit.jupiter:junit-jupiter-engine'
    testFixturesApi "ch.qos.logback:logback-classic"
    testFixturesApi 'org.awaitility:awaitility'
    testFixturesApi "org.testcontainers:testcontainers"
    testFixturesApi "org.testcontainers:mysql"
    testFixturesApi "org.testcontainers:jdbc"
    testFixturesApi "org.testcontainers:mariadb"
    testFixturesApi 'org.testcontainers:postgresql'
    testFixturesApi 'org.mariadb.jdbc:mariadb-java-client'
    testFixturesApi 'org.postgresql:postgresql'

    testFixturesApi 'com.h2database:h2'
    testFixturesApi 'ch.qos.logback:logback-classic'
    testFixturesApi 'org.junit.jupiter:junit-jupiter-engine'
    testFixturesApi 'junit:junit'
    testFixturesApi 'org.junit.platform:junit-platform-launcher'
    testFixturesApi 'org.spockframework:spock-core'
    testFixturesApi 'org.assertj:assertj-core'
    testFixturesApi 'org.mockito:mockito-core'
    testFixturesApi 'org.awaitility:awaitility'
    testFixturesApi 'com.squareup.okhttp3:okhttp'
    testFixturesApi 'io.swagger.core.v3:swagger-annotations'

    testFixturesApi 'org.slf4j:slf4j-api'
    testFixturesApi 'ch.qos.logback:logback-core'
    testImplementation 'ch.qos.logback:logback-classic'

//	testCompileOnly platform("org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion")
//	testCompileOnly "org.springframework.cloud:spring-cloud-openfeign-core"

    testFixturesApi project(":servicebus-common")
}

test {
    useJUnitPlatform()
    reports
}

java {
    withSourcesJar()
}
